# used to create the object
name: A1

description: "action->joint angle 3. no given fixed velocities."

physics_engine: 'physx'
num_controller_threads: 26

env:
  numEnvs: ${resolve_default:4096,${...num_envs}}
  numObservations: 52 # 52 # 163
  numActions: 12
  envSpacing: 3.  # [m]
  enableDebugVis: false

  clipActions: 1.0

  urdfAsset:
    file: "urdf/a1/urdf/a1_old.urdf"
    baseName: trunk
    thighName: thigh
    calfName: calf
    footName: foot # SHANK if collapsing fixed joint, FOOT otherwise
    collapseFixedJoints: False
    fixBaseLink: False
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)
    useForceSensor: False # wsh_annotation: use force sensors to acquire feet forces or not

  # threshold
  contactForceThreshold: 5.0
  stanceFootForceThreshold: 25.0
  xyVelocityCommandThreshold: 0.05

  baseInitState:
    pos: [ 0.0, 0.0, 0.30001 ] # x,y,z [m] 0.28
    #    rot: [ 0.0, 0.0, 0.0, 1.0 ] # x,y,z,w [quat]
    rpy: [ 0.0, 0.0, 0.0 ] # roll, pitch, yaw [rad]
    vLinear: [ 0.0, 0.0, 0.0 ]  # x,y,z [m/s]
    vAngular: [ 0.0, 0.0, 0.0 ]  # x,y,z [rad/s]

  defaultJointAngles:
    FR_hip_joint: 0.0    # [rad]
    FL_hip_joint: 0.0    # [rad]
    RR_hip_joint: 0.0   # [rad]
    RL_hip_joint: 0.0   # [rad]

    FR_thigh_joint: 0.7954 # 0.8632     # [rad]
    FL_thigh_joint: 0.7954 # 0.8632     # [rad]
    RR_thigh_joint: 0.7954 # 0.8632     # [rad]
    RL_thigh_joint: 0.7954 # 0.8632     # [rad]

    FR_calf_joint: -1.5908 # -1.7264    # [rad]
    FL_calf_joint: -1.5908 # -1.7264    # [rad]
    RR_calf_joint: -1.5908 # -1.7264    # [rad]
    RL_calf_joint: -1.5908 # -1.7264    # [rad]

  terrain:
    terrainType: plane # none, plane, or trimesh
    staticFriction: 0.5  # [-]
    dynamicFriction: 0.46  # [-]
    restitution: 0.1        # [-]
    # rough terrain only:
    curriculum: false
    maxInitMapLevel: 0
    mapLength: 8. # 40.
    mapWidth: 8. # 40.
    numLevels: 5 # 10
    numTerrains: 5 # 20
    # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
    terrainProportions: [ 0.1, 0.1, 0.35, 0.25, 0.2 ]
    # tri mesh only:
    slopeTreshold: 0.5
    numTerrainObservations: 140
    # contain terrain map in observation
    addTerrainObservation: false
    useMultiprocess: false

  randomCommandVelocityRanges:
    # train
    linear_x: [ -3., 3. ] # min max [m/s]
    linear_y: [ -1., 1. ]   # min max [m/s]
    yaw: [ -3.14, 3.14 ]    # min max [rad/s]

  control:
    # PD Drive parameters:
    stiffness: 80.0  # [N*m/rad]
    damping: 2.0     # [N*m*s/rad]
    # action scale: target angle = actionScale * action + defaultAngle
    actionScale: 1.5
    # decimation: Number of control action updates @ sim DT per policy DT
    decimation: 1 # 4

  learn:
    allowKneeContacts: false
    # rewards
    terminalReward: -0.1
    linearVelocityXYRewardScale: 5.0
    linearVelocityZRewardScale: -1.0
    angularVelocityXYRewardScale: -0.001
    angularVelocityZRewardScale: 5.0 # 0.5
    orientationRewardScale: -1. #-1.
    torqueRewardScale: -0.00002 # -0.000025
    jointAccRewardScale: -0.000 # -0.0005 -0.0025
    baseHeightRewardScale: -0.2 #5
    feetAirTimeRewardScale: 0.0 # 1.0
    kneeCollisionRewardScale: -0.05 # -0.25
    feetStumbleRewardScale: -0. #-2.0
    actionRateRewardScale: -0.01 #-0.01
    energyRewardScale: -0.0 # -0.02
    # cosmetics
    hipRewardScale: -0. #25

    observationConfig:
      addNoise: false
      combination:
        linearVelocity: 0 # [ 0, 1, 4, 8 ] # size -> 3
        angularVelocity: 0 # [ 0, 1, 4, 8 ] # size -> 3
        projectedGravity: 0 # [ 0, 1, 4, 8 ] # size -> 3
        dofPosition: 0 # [ 0, 1, 4, 8 ] # size -> 12
        dofVelocity: 0 # [ 0, 1, 4, 8 ] # size -> 12
        feetContactState: 0 # [ 0, 1, 4, 8 ] # size -> 4
        lastAction: 0 # size -> 12
        commands: 0 # size -> 3
      components:
        linearVelocity:
          size: 3
          bufferLength: 10
          scale: 0.3
          noise: 0.02
        angularVelocity:
          size: 3
          bufferLength: 10
          scale: 0.3
          noise: 0.002
        projectedGravity:
          size: 3
          bufferLength: 10
          scale: 1.0
          noise: 0.05
        dofPosition:
          size: 12
          bufferLength: 10
          scale: 1.0
          noise: 0.002
        dofVelocity:
          size: 12
          bufferLength: 10
          scale: 0.05
          noise: 0.2
        commands:
          size: 3
          bufferLength: 1
          scale: [ 0.3, 0.3, 0.3 ]
          noise: 0
        lastAction:
          size: 12
          bufferLength: 1
          scale: 1.0
          noise: 0
        feetContactState:
          size: 4
          bufferLength: 10
          scale: 1.0
          noise: 0
        heightMeasurement:
          size: 0
          bufferLength: 1
          scale: 5.0
          noise: 0.06

    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05
    heightMeasurementScale: 5.0

    # noise
    addNoise: true
    noiseLevel: 1.0 # scales other values
    dofPositionNoise: 0.01
    dofVelocityNoise: 1.5
    linearVelocityNoise: 0.1
    angularVelocityNoise: 0.2
    gravityNoise: 0.05
    heightMeasurementNoise: 0.06

    #randomization
    randomizeContactParams: true
    frictionRange: [ 0.5, 1.25 ]
    restitutionRange: [ 0.0, 0.5 ]
    pushRobots: false
    pushInterval_s: 1

    # episode length in seconds
    episodeLength_s: 30

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [ 12., 12., 1. ]  # [m]
    lookat: [ 13., 13., 0. ]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.002 # 0.005
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [ 0.0, 0.0, -9.81 ]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 30000000 # 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)

task:
  randomize: false
  randomization_params:
    frequency: 600   # Define how many environment steps between generating new randomizations
    actions:
      range: [ 0., .02 ]
      operation: "additive"
      distribution: "gaussian"
    sim_params:
      gravity:
        range: [ 0, 0.4 ]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 3000
    actor_params:
      a1:
        color: true
        rigid_body_properties:
          mass:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 3000
        rigid_shape_properties:
          friction: ### wsh_annotation: default -> 1.0
            num_buckets: 500
            range: [ 0.1, 2.1 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          restitution: ### wsh_annotation: default -> 0.0
            range: [ -0.1, 1.3 ]
            operation: "additive"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
        dof_properties:
          damping:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          stiffness:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          lower:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          upper:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000